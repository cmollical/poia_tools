{"ast":null,"code":"var _jsxFileName = \"C:\\\\poia_tools\\\\roia-suite\\\\frontend\\\\src\\\\components\\\\EnterpriseWorkflow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from '../services/api';\nimport './EnterpriseWorkflow.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EnterpriseWorkflow = ({\n  onComplete,\n  onCancel\n}) => {\n  _s();\n  // Step 1: Update Type Selection\n  const [updateType, setUpdateType] = useState(''); // 'jira', 'confluence', 'both'\n  const [selectedProject, setSelectedProject] = useState('');\n  const [selectedSpace, setSelectedSpace] = useState('');\n  const [selectedParentPage, setSelectedParentPage] = useState('');\n\n  // Available options from backend\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [availableSpaces, setAvailableSpaces] = useState([]);\n  const [availablePages, setAvailablePages] = useState([]);\n  const [availableEpics, setAvailableEpics] = useState([]);\n  const [selectedEpic, setSelectedEpic] = useState('');\n  const [username, setUsername] = useState(''); // Username for Jira assignee\n  const [confluenceAuthor, setConfluenceAuthor] = useState(''); // Author for Confluence pages\n  /* eslint-disable no-unused-vars */\n  // Variables for Confluence page updating - used in JSX and processContent function\n  const [selectedExistingPage, setSelectedExistingPage] = useState('');\n  const [updateExistingPage, setUpdateExistingPage] = useState(false);\n  /* eslint-enable no-unused-vars */\n\n  // Step 2: Voice/Text Input\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [characterCount, setCharacterCount] = useState(0);\n  // Token estimation has been removed as requested\n  const [multipleUpdates, setMultipleUpdates] = useState(false);\n\n  // Step 3: LLM Processing\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedContent, setGeneratedContent] = useState([]);\n\n  // Step 4: Draft Review\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [editingItem, setEditingItem] = useState(null);\n\n  // Step 5: Batch Confirmation & Results\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n\n  // Epic creation modal\n  const [showNewEpicModal, setShowNewEpicModal] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [newEpicSummary, setNewEpicSummary] = useState('');\n  const [newEpicDescription, setNewEpicDescription] = useState('');\n  const [isCreatingEpic, setIsCreatingEpic] = useState(false);\n\n  // Update character count\n  useEffect(() => {\n    setCharacterCount(inputText.length);\n    // Token estimation removed as requested\n  }, [inputText]);\n  const loadInitialData = async () => {\n    console.log('🔍 loadInitialData called');\n    try {\n      // Load available projects and spaces\n      const [jiraHealth, confluenceHealth] = await Promise.all([ApiService.checkJiraHealth().catch(err => {\n        console.error('Failed to check Jira health:', err);\n        return {\n          status: 'unhealthy'\n        };\n      }), ApiService.checkConfluenceHealth().catch(err => {\n        console.error('Failed to check Confluence health:', err);\n        return {\n          connected: false,\n          error: err.message\n        };\n      })]);\n      console.log('🔍 Health checks:', {\n        jiraHealth,\n        confluenceHealth\n      });\n\n      // Always set some default projects and spaces to ensure UI is functional\n      // This is a fallback in case the health checks fail\n      const defaultProjects = [{\n        key: 'ROIA',\n        name: 'ROIA'\n      }, {\n        key: 'PROPS',\n        name: 'PROPS'\n      }];\n      const defaultSpaces = [{\n        key: 'ROIA',\n        name: 'ROIA'\n      }, {\n        key: 'PROPS',\n        name: 'PROPS'\n      }];\n\n      // Set Jira projects\n      if (jiraHealth && jiraHealth.status === 'healthy') {\n        console.log('✅ Setting Jira projects');\n        setAvailableProjects(defaultProjects);\n      } else {\n        console.log('⚠️ Using default Jira projects due to health check failure');\n        setAvailableProjects(defaultProjects);\n      }\n\n      // Set Confluence spaces\n      if (confluenceHealth && confluenceHealth.connected === true) {\n        console.log('✅ Setting Confluence spaces');\n        setAvailableSpaces(defaultSpaces);\n      } else {\n        console.log('⚠️ Using default Confluence spaces due to health check failure:', confluenceHealth);\n        setAvailableSpaces(defaultSpaces);\n      }\n    } catch (err) {\n      console.error('❌ loadInitialData error:', err);\n      setError('Failed to load initial data');\n\n      // Set defaults even if there's an error\n      setAvailableProjects([{\n        key: 'ROIA',\n        name: 'ROIA'\n      }]);\n      setAvailableSpaces([{\n        key: 'ROIA',\n        name: 'ROIA'\n      }]);\n    }\n  };\n\n  // Load initial data when component mounts (only once)\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n  const handleUpdateTypeChange = type => {\n    setUpdateType(type);\n    // Reset selections when type changes\n    setSelectedProject('');\n    setSelectedSpace('');\n    setSelectedParentPage('');\n  };\n  const createNewEpic = async () => {\n    if (!selectedProject || !newEpicName.trim() || !newEpicSummary.trim()) {\n      return;\n    }\n    setIsCreatingEpic(true);\n    setError('');\n    try {\n      console.log('🔍 Creating new epic for project:', selectedProject);\n      const result = await ApiService.createJiraEpic(newEpicName, newEpicSummary, newEpicDescription, selectedProject);\n      console.log('✅ Created new epic:', result);\n\n      // Add the new epic to the list and select it\n      const newEpic = {\n        id: result.epic_id,\n        key: result.epic_key,\n        name: newEpicName,\n        summary: newEpicSummary\n      };\n      setAvailableEpics([...availableEpics, newEpic]);\n      setSelectedEpic(result.epic_id);\n\n      // Close the modal and reset the form\n      setShowNewEpicModal(false);\n      setNewEpicName('');\n      setNewEpicSummary('');\n      setNewEpicDescription('');\n    } catch (err) {\n      console.error('❌ Failed to create epic:', err);\n      setError(`Failed to create epic: ${err.message}`);\n    } finally {\n      setIsCreatingEpic(false);\n    }\n  };\n  const handleProjectChange = async projectKey => {\n    setSelectedProject(projectKey);\n    setSelectedEpic('');\n    // Load epics for the selected project\n    if (projectKey) {\n      try {\n        console.log('🔍 Loading epics for project:', projectKey);\n        const epics = await ApiService.getJiraEpics(projectKey);\n        console.log('✅ Loaded epics:', epics);\n        setAvailableEpics(epics);\n      } catch (err) {\n        console.error('❌ Failed to load epics for project:', projectKey, err);\n        setAvailableEpics([]);\n      }\n    } else {\n      setAvailableEpics([]);\n    }\n  };\n  const handleSpaceChange = async spaceKey => {\n    console.log('🔍 handleSpaceChange called with space:', spaceKey);\n    setSelectedSpace(spaceKey);\n    // Reset selected parent page\n    setSelectedParentPage('');\n\n    // Load pages for the selected space\n    if (spaceKey) {\n      try {\n        console.log('🔍 Fetching pages for space:', spaceKey);\n        // Use the increased limit of 500 pages\n        const pages = await ApiService.getConfluencePages(spaceKey, 500);\n        console.log('✅ Received pages:', pages);\n        setAvailablePages(pages);\n      } catch (err) {\n        console.error('❌ Failed to load pages for space:', spaceKey, err);\n        setAvailablePages([]);\n      }\n    } else {\n      setAvailablePages([]);\n    }\n  };\n\n  // Speech recognition implementation\n  const startRecording = () => {\n    // If already recording, stop it\n    if (isRecording && window.currentRecognition) {\n      stopRecording();\n      return;\n    }\n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Speech recognition is not supported in your browser. Please use Chrome or Edge.');\n      return;\n    }\n    setIsRecording(true);\n\n    // Initialize speech recognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n\n    // Configure recognition\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    // Handle results\n    recognition.onresult = event => {\n      let transcript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        if (event.results[i].isFinal) {\n          transcript += event.results[i][0].transcript + ' ';\n        }\n      }\n      if (transcript) {\n        // Append to existing text instead of replacing\n        setInputText(prevText => prevText + ' ' + transcript.trim());\n      }\n    };\n\n    // Handle end of recording\n    recognition.onend = () => {\n      setIsRecording(false);\n      // Clear the current recognition instance\n      window.currentRecognition = null;\n    };\n\n    // Handle errors\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setIsRecording(false);\n      window.currentRecognition = null;\n      if (event.error === 'not-allowed') {\n        alert('Microphone access denied. Please allow microphone access to use voice input.');\n      }\n    };\n\n    // Start recording\n    recognition.start();\n\n    // Store recognition instance for stopping later\n    window.currentRecognition = recognition;\n  };\n\n  // Function to stop recording\n  const stopRecording = () => {\n    if (window.currentRecognition) {\n      window.currentRecognition.stop();\n      // onend handler will set isRecording to false\n    }\n  };\n\n  // This is intentionally empty to remove the duplicate function\n\n  const processContent = async () => {\n    if (!inputText.trim()) {\n      setError('Please enter some content to process');\n      return;\n    }\n    setIsProcessing(true);\n    setError('');\n    let processedContent = [];\n    try {\n      // Process for Jira if selected\n      if (updateType === 'jira' || updateType === 'both') {\n        try {\n          // Process for Jira with enforced schema\n          const jiraContent = await ApiService.processTranscript({\n            transcript: inputText,\n            mode: 'jira',\n            multipleIssues: multipleUpdates,\n            projectKey: selectedProject\n          });\n          if (jiraContent.success) {\n            // Handle multiple issues if available\n            if (multipleUpdates && Array.isArray(jiraContent.split_intents) && jiraContent.split_intents.length > 0) {\n              console.log('🔍 Processing multiple Jira issues:', jiraContent.split_intents.length);\n\n              // Add each split intent as a separate item\n              jiraContent.split_intents.forEach((intent, index) => {\n                processedContent.push({\n                  type: 'jira',\n                  id: `jira-${Date.now()}-${index}`,\n                  title: intent.summary || `Issue ${index + 1}`,\n                  content: intent,\n                  projectKey: selectedProject,\n                  epicKey: selectedEpic || null\n                });\n              });\n            }\n            // Fall back to single issue if no splits or splitting not enabled\n            else if (jiraContent.classified_intent) {\n              processedContent.push({\n                type: 'jira',\n                id: `jira-${Date.now()}`,\n                title: jiraContent.classified_intent.summary,\n                content: jiraContent.classified_intent,\n                projectKey: selectedProject,\n                epicKey: selectedEpic || null\n              });\n            }\n          }\n        } catch (jiraError) {\n          console.error('Error processing Jira content:', jiraError);\n          // Continue processing Confluence if selected\n        }\n      }\n\n      // Process for Confluence if selected\n      if (updateType === 'confluence' || updateType === 'both') {\n        try {\n          // Process for Confluence with enforced schema\n          const confluenceContent = await ApiService.processTranscript({\n            transcript: inputText,\n            mode: 'confluence',\n            multiplePages: multipleUpdates,\n            spaceKey: selectedSpace\n          });\n          console.log('🔍 Confluence content response:', confluenceContent);\n\n          // Use the classified_intent for Confluence content as well\n          // The backend uses the same structure for both Jira and Confluence\n          if (confluenceContent.success && confluenceContent.classified_intent) {\n            // For now, we don't have multiple pages support in the backend yet\n            // So we'll create a single Confluence page\n            const confluenceData = {\n              title: confluenceContent.classified_intent.summary || 'Generated Page Title',\n              body: confluenceContent.classified_intent.description || inputText,\n              sections: confluenceContent.classified_intent.acceptance_criteria || ['Introduction', 'Details']\n            };\n            processedContent.push({\n              type: 'confluence',\n              id: `confluence-${Date.now()}`,\n              title: confluenceData.title,\n              content: confluenceData,\n              spaceKey: selectedSpace,\n              parentPageId: updateExistingPage ? null : selectedParentPage,\n              updateExistingPage: updateExistingPage,\n              existingPageId: updateExistingPage ? selectedExistingPage : null\n            });\n            console.log('✅ Created Confluence content item:', confluenceData.title);\n          } else {\n            // Fallback if processing fails\n            processedContent.push({\n              type: 'confluence',\n              id: `confluence-${Date.now()}`,\n              title: 'Generated Page Title',\n              content: {\n                title: 'Generated Page Title',\n                sections: ['Section 1', 'Section 2'],\n                body: inputText\n              },\n              spaceKey: selectedSpace,\n              parentPageId: updateExistingPage ? null : selectedParentPage,\n              updateExistingPage: updateExistingPage,\n              existingPageId: updateExistingPage ? selectedExistingPage : null\n            });\n          }\n        } catch (confluenceError) {\n          console.error('Error processing Confluence content:', confluenceError);\n          // Continue with what we have\n        }\n      }\n\n      // Update UI with processed content\n      setGeneratedContent(processedContent);\n\n      // Auto-expand all items for review\n      const allIds = new Set(processedContent.map(item => item.id));\n      setExpandedItems(allIds);\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const toggleItemExpansion = itemId => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n  };\n  const startEditingItem = itemId => {\n    setEditingItem(itemId);\n  };\n  const saveItemEdit = (itemId, updatedContent) => {\n    setGeneratedContent(prev => prev.map(item => item.id === itemId ? {\n      ...item,\n      ...updatedContent\n    } : item));\n    setEditingItem(null);\n  };\n  const addSplit = afterItemId => {\n    const afterIndex = generatedContent.findIndex(item => item.id === afterItemId);\n    const newItem = {\n      type: generatedContent[afterIndex].type,\n      id: `${generatedContent[afterIndex].type}-${Date.now()}`,\n      title: 'New Split Item',\n      content: generatedContent[afterIndex].content,\n      projectKey: generatedContent[afterIndex].projectKey,\n      spaceKey: generatedContent[afterIndex].spaceKey\n    };\n    const newContent = [...generatedContent];\n    newContent.splice(afterIndex + 1, 0, newItem);\n    setGeneratedContent(newContent);\n  };\n  const mergeWithPrevious = itemId => {\n    const itemIndex = generatedContent.findIndex(item => item.id === itemId);\n    if (itemIndex > 0) {\n      const newContent = [...generatedContent];\n      const currentItem = newContent[itemIndex];\n      const previousItem = newContent[itemIndex - 1];\n\n      // Merge content\n      previousItem.title += ` & ${currentItem.title}`;\n      // Merge logic would depend on content structure\n\n      newContent.splice(itemIndex, 1);\n      setGeneratedContent(newContent);\n    }\n  };\n  const proceedToConfirmation = () => {\n    if (generatedContent.length === 0) {\n      setError('No content to create');\n      return;\n    }\n    setShowConfirmation(true);\n  };\n  const executeCreation = async () => {\n    setIsExecuting(true);\n    setError('');\n    try {\n      const creationResults = [];\n      for (const item of generatedContent) {\n        if (item.type === 'jira') {\n          console.log('🔍 Creating Jira issue with epic key:', item.epicKey);\n\n          // Ensure we're only creating stories, not bugs, tasks, or epics\n          const contentCopy = {\n            ...item.content\n          };\n          contentCopy.type = 'story'; // Force type to be 'story'\n\n          // Add assignee if username is provided\n          if (username && username.trim()) {\n            contentCopy.assignee = username.trim();\n            console.log('🔍 Setting assignee to:', username.trim());\n          }\n          const result = await ApiService.createJiraIssueFromIntent({\n            classified_intent: contentCopy\n          }, item.projectKey, item.epicKey);\n          creationResults.push({\n            type: 'jira',\n            title: item.title,\n            key: result.issue_key,\n            url: result.issue_url,\n            success: true\n          });\n        } else if (item.type === 'confluence') {\n          try {\n            // Add author information if provided\n            let pageContent = item.content.body;\n            if (confluenceAuthor && confluenceAuthor.trim()) {\n              // Add author information to the content\n              pageContent = `<p><strong>Author:</strong> ${confluenceAuthor.trim()}</p>\\n${pageContent}`;\n              console.log('🔍 Setting Confluence page author to:', confluenceAuthor.trim());\n            }\n            let result;\n\n            // Check if we're updating an existing page or creating a new one\n            if (item.updateExistingPage && item.existingPageId) {\n              console.log('🔍 Updating existing Confluence page:', item.existingPageId);\n              result = await ApiService.updateConfluencePage(item.existingPageId, pageContent, `Updated via AI Project Management Suite by ${confluenceAuthor || 'user'}`, true // append = true\n              );\n            } else {\n              // Create a new Confluence page\n              console.log('🔍 Creating new Confluence page in space:', item.spaceKey);\n              result = await ApiService.createConfluencePage({\n                title: item.title,\n                content: pageContent\n              }, item.spaceKey, item.parentPageId || null);\n            }\n            creationResults.push({\n              type: 'confluence',\n              title: item.title,\n              key: result.page_id,\n              url: result.page_url,\n              success: true\n            });\n          } catch (error) {\n            console.error('Error creating Confluence page:', error);\n            creationResults.push({\n              type: 'confluence',\n              title: item.title,\n              key: null,\n              url: null,\n              success: false,\n              error: error.message\n            });\n          }\n        }\n      }\n      setResults(creationResults);\n      onComplete(creationResults);\n    } catch (err) {\n      setError(`Creation failed: ${err.message}`);\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  const createSimilarUpdate = () => {\n    // Reset to input step but keep selections\n    setGeneratedContent([]);\n    setResults([]);\n    setShowConfirmation(false);\n    setInputText('');\n    setError('');\n  };\n\n  // Render main workflow\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"enterprise-workflow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDE80 Create Project Updates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enterprise-grade workflow for Jira issues and Confluence pages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), !updateType && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"1. Select Update Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"updateType\",\n            value: \"jira\",\n            onChange: e => handleUpdateTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"radio-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Jira Issues\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Create structured issues for project tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"updateType\",\n            value: \"confluence\",\n            onChange: e => handleUpdateTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"radio-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Confluence Pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Create documentation and knowledge base content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"radio-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"updateType\",\n            value: \"both\",\n            onChange: e => handleUpdateTypeChange(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"radio-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Both\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Create issues and pages simultaneously\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this), updateType && !inputText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setUpdateType(''),\n          className: \"back-button\",\n          children: \"\\u2190 Back to Update Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"2. Select Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destination-controls\",\n        children: [(updateType === 'jira' || updateType === 'both') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Jira Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedProject,\n            onChange: e => handleProjectChange(e.target.value),\n            className: \"searchable-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select project...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this), availableProjects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: project.key,\n              children: [project.key, \" - \", project.name]\n            }, project.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 17\n          }, this), selectedProject && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Username (will be assigned to you)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                placeholder: \"Enter your Jira username\",\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"input-help\",\n                children: \"This will be set as the assignee for the created issues\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Epic (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedEpic,\n                onChange: e => {\n                  const value = e.target.value;\n                  if (value === 'create_new') {\n                    // Show the create epic modal\n                    setShowNewEpicModal(true);\n                  } else {\n                    setSelectedEpic(value);\n                  }\n                },\n                className: \"searchable-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"No epic (create at root level)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"create_new\",\n                  children: \"\\u2795 Create new epic...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 23\n                }, this), availableEpics.length > 0 && [...availableEpics].sort((a, b) => {\n                  // Safely handle missing properties by using fallbacks\n                  const nameA = a.epic_name || a.name || a.epic_summary || a.summary || '';\n                  const nameB = b.epic_name || b.name || b.epic_summary || b.summary || '';\n                  return nameA.localeCompare(nameB);\n                }).map((epic, index) => {\n                  // Extract properties from API response format\n                  const id = epic.epic_key || epic.id || `epic-${index}`;\n                  const key = epic.epic_key || epic.key || 'Unknown';\n                  const name = epic.epic_name || epic.name || epic.epic_summary || 'Untitled Epic';\n                  // Remove unused summary variable to fix ESLint warning\n\n                  // Ensure unique key by combining id with index\n                  const uniqueKey = `${id}-${index}`;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: id,\n                    children: [key, \" | \", name]\n                  }, uniqueKey, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 15\n        }, this), (updateType === 'confluence' || updateType === 'both') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confluence Space\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSpace,\n            onChange: e => handleSpaceChange(e.target.value),\n            className: \"searchable-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select space...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 19\n            }, this), availableSpaces.map(space => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: space.key,\n              children: [space.key, \" - \", space.name]\n            }, space.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 17\n          }, this), selectedSpace && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sub-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Author (will be credited in the page)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: confluenceAuthor,\n                onChange: e => setConfluenceAuthor(e.target.value),\n                placeholder: \"Enter your name\",\n                className: \"text-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"input-help\",\n                children: \"This will be shown as the page author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 21\n            }, this), availablePages.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-control\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"toggle-option\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: updateExistingPage,\n                    onChange: e => {\n                      setUpdateExistingPage(e.target.checked);\n                      if (!e.target.checked) {\n                        setSelectedExistingPage('');\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Update existing page\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"Add content to an existing page instead of creating a new one\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 778,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 25\n              }, this), updateExistingPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Page to Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedExistingPage,\n                  onChange: e => setSelectedExistingPage(e.target.value),\n                  className: \"searchable-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select a page to update...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 790,\n                    columnNumber: 31\n                  }, this), [...availablePages].sort((a, b) => a.page_title.localeCompare(b.page_title)).map(page => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: page.page_id,\n                    children: page.page_title\n                  }, page.page_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 35\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Parent Page (optional)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: selectedParentPage,\n                  onChange: e => setSelectedParentPage(e.target.value),\n                  className: \"searchable-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"No parent (root level)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 31\n                  }, this), [...availablePages].sort((a, b) => a.page_title.localeCompare(b.page_title)).map(page => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: page.page_id,\n                    children: page.page_title\n                  }, page.page_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 35\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helper-text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Issues vs Pages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }, this), \" Issues track actionable work items with status, priority, and assignments. Pages capture knowledge, documentation, and collaborative content.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInputText(' ') // Trigger input step\n        ,\n        disabled: updateType === 'jira' && !selectedProject || updateType === 'confluence' && !selectedSpace || updateType === 'both' && (!selectedProject || !selectedSpace),\n        className: \"btn-continue\",\n        children: \"Continue to Input \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }, this), updateType && inputText && !showConfirmation && results.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setInputText('');\n            setGeneratedContent([]);\n            setError('');\n          },\n          className: \"back-button\",\n          children: \"\\u2190 Back to Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"3. Input Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voice-text-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: startRecording,\n              className: `btn-voice ${isRecording ? 'recording' : ''}`,\n              children: isRecording ? '⏹️ Stop Recording' : '🎤 Voice Input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputText,\n            onChange: e => setInputText(e.target.value),\n            placeholder: \"Describe what you want to create...\",\n            className: \"content-textarea\",\n            rows: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-stats\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"char-count\",\n              children: [characterCount, \" characters\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advanced-options\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"toggle-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: multipleUpdates,\n                onChange: e => setMultipleUpdates(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Split into multiple \", updateType === 'jira' ? 'issues' : updateType === 'confluence' ? 'pages' : 'items']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"AI will look for logical breakpoints to create separate items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 890,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: processContent,\n          disabled: !inputText.trim() || isProcessing,\n          className: \"btn-process\",\n          children: isProcessing ? '⏳ Processing...' : '🧠 Generate Content'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 9\n    }, this), generatedContent.length > 0 && !showConfirmation && results.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setGeneratedContent([]);\n            setError('');\n          },\n          className: \"back-button\",\n          children: \"\\u2190 Back to Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"4. Review & Edit Drafts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"draft-accordion\",\n        children: generatedContent.map((item, index) => {\n          var _item$content$section;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-header\",\n              onClick: () => toggleItemExpansion(item.id),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-type-badge\",\n                children: [item.type === 'jira' ? '🎫' : '📄', \" \", item.type.toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"expand-icon\",\n                children: expandedItems.has(item.id) ? '▼' : '▶'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 17\n            }, this), expandedItems.has(item.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"accordion-content\",\n              children: editingItem === item.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"edit-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  value: item.title,\n                  onChange: e => saveItemEdit(item.id, {\n                    title: e.target.value\n                  }),\n                  className: \"edit-title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 25\n                }, this), item.type === 'jira' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: item.content.description || '',\n                    onChange: e => saveItemEdit(item.id, {\n                      content: {\n                        ...item.content,\n                        description: e.target.value\n                      }\n                    }),\n                    className: \"edit-description\",\n                    rows: 4\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: item.content.priority || 'Medium',\n                    onChange: e => saveItemEdit(item.id, {\n                      content: {\n                        ...item.content,\n                        priority: e.target.value\n                      }\n                    }),\n                    className: \"edit-priority\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Low\",\n                      children: \"Low Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 970,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Medium\",\n                      children: \"Medium Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"High\",\n                      children: \"High Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 972,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Critical\",\n                      children: \"Critical Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 963,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setEditingItem(null),\n                    className: \"btn-save\",\n                    children: \"\\u2713 Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content-details\",\n                  children: item.type === 'jira' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Summary:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 988,\n                        columnNumber: 34\n                      }, this), \" \", item.content.summary]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 988,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Description:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 989,\n                        columnNumber: 34\n                      }, this), \" \", item.content.description]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 989,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Priority:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 990,\n                        columnNumber: 34\n                      }, this), \" \", item.content.priority]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Type:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 34\n                      }, this), \" \", item.content.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 991,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Title:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 995,\n                        columnNumber: 34\n                      }, this), \" \", item.content.title]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 995,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Sections:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 996,\n                        columnNumber: 34\n                      }, this), \" \", (_item$content$section = item.content.sections) === null || _item$content$section === void 0 ? void 0 : _item$content$section.join(', ')]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 996,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Body:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 997,\n                        columnNumber: 36\n                      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"body-preview\",\n                        children: item.content.body\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 997,\n                        columnNumber: 59\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 997,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => startEditingItem(item.id),\n                    className: \"btn-edit\",\n                    children: \"\\u270F\\uFE0F Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1003,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => addSplit(item.id),\n                    className: \"btn-split\",\n                    children: \"\\u2795 Add Split\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 27\n                  }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => mergeWithPrevious(item.id),\n                    className: \"btn-merge\",\n                    children: \"\\uD83D\\uDD17 Merge with Previous\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1016,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1002,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 19\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGeneratedContent([]),\n          className: \"btn-back\",\n          children: \"\\u2190 Back to Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: proceedToConfirmation,\n          className: \"btn-continue\",\n          children: \"Continue to Confirmation \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 9\n    }, this), showNewEpicModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Epic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Epic Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newEpicName,\n              onChange: e => setNewEpicName(e.target.value),\n              placeholder: \"Enter epic name\",\n              className: \"modal-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newEpicSummary,\n              onChange: e => setNewEpicSummary(e.target.value),\n              placeholder: \"Enter epic summary\",\n              className: \"modal-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1070,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newEpicDescription,\n              onChange: e => setNewEpicDescription(e.target.value),\n              placeholder: \"Enter epic description\",\n              className: \"modal-textarea\",\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowNewEpicModal(false);\n                setNewEpicName('');\n                setNewEpicSummary('');\n                setNewEpicDescription('');\n              },\n              className: \"btn-cancel\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: createNewEpic,\n              disabled: !newEpicName.trim() || !newEpicSummary.trim() || isCreatingEpic,\n              className: \"btn-create\",\n              children: isCreatingEpic ? '⏳ Creating...' : 'Create Epic'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 9\n    }, this), showConfirmation && results.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          className: \"back-button\",\n          children: \"\\u2190 Back to Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"5. Confirm Creation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCA Creation Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: generatedContent.filter(item => item.type === 'jira').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Jira Issues\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: generatedContent.filter(item => item.type === 'confluence').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Confluence Pages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"warnings\",\n          children: generatedContent.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-item\",\n            children: [\"\\u26A0\\uFE0F Creating \", generatedContent.length, \" items simultaneously. This may take several minutes.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-review\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Items to be created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"creation-list\",\n            children: generatedContent.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"creation-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-badge\",\n                children: item.type === 'jira' ? '🎫' : '📄'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"item-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: item.type === 'jira' ? `Project: ${item.projectKey}` : `Space: ${item.spaceKey}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 21\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          className: \"btn-back\",\n          children: \"\\u2190 Back to Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCreation,\n          disabled: isExecuting,\n          className: \"btn-execute\",\n          children: isExecuting ? '⏳ Creating...' : '🚀 Create All Items'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 9\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"6. Creation Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Key/ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Link\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1189,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: result.success ? 'success' : 'error',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"type-badge\",\n                  children: result.type === 'jira' ? '🎫 Jira' : '📄 Confluence'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1201,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: result.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"result-key\",\n                children: result.key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: result.url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  className: \"result-link\",\n                  children: \"View \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1208,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1207,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${result.success ? 'success' : 'error'}`,\n                  children: result.success ? '✓ Created' : '✗ Failed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1213,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1199,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-completion\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"completion-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createSimilarUpdate,\n            className: \"btn-similar\",\n            children: \"\\uD83D\\uDD04 Create Similar Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onCancel,\n            className: \"btn-done\",\n            children: \"\\u2713 Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1224,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 588,\n    columnNumber: 5\n  }, this);\n};\n_s(EnterpriseWorkflow, \"Jt+M0UbY3g7GhqnY9XsP7LYz2C4=\");\n_c = EnterpriseWorkflow;\nexport default EnterpriseWorkflow;\nvar _c;\n$RefreshReg$(_c, \"EnterpriseWorkflow\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","EnterpriseWorkflow","onComplete","onCancel","_s","updateType","setUpdateType","selectedProject","setSelectedProject","selectedSpace","setSelectedSpace","selectedParentPage","setSelectedParentPage","availableProjects","setAvailableProjects","availableSpaces","setAvailableSpaces","availablePages","setAvailablePages","availableEpics","setAvailableEpics","selectedEpic","setSelectedEpic","username","setUsername","confluenceAuthor","setConfluenceAuthor","selectedExistingPage","setSelectedExistingPage","updateExistingPage","setUpdateExistingPage","inputText","setInputText","isRecording","setIsRecording","characterCount","setCharacterCount","multipleUpdates","setMultipleUpdates","isProcessing","setIsProcessing","generatedContent","setGeneratedContent","expandedItems","setExpandedItems","Set","editingItem","setEditingItem","showConfirmation","setShowConfirmation","isExecuting","setIsExecuting","results","setResults","error","setError","showNewEpicModal","setShowNewEpicModal","newEpicName","setNewEpicName","newEpicSummary","setNewEpicSummary","newEpicDescription","setNewEpicDescription","isCreatingEpic","setIsCreatingEpic","length","loadInitialData","console","log","jiraHealth","confluenceHealth","Promise","all","checkJiraHealth","catch","err","status","checkConfluenceHealth","connected","message","defaultProjects","key","name","defaultSpaces","handleUpdateTypeChange","type","createNewEpic","trim","result","createJiraEpic","newEpic","id","epic_id","epic_key","summary","handleProjectChange","projectKey","epics","getJiraEpics","handleSpaceChange","spaceKey","pages","getConfluencePages","startRecording","window","currentRecognition","stopRecording","alert","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onresult","event","transcript","i","resultIndex","isFinal","prevText","onend","onerror","start","stop","processContent","processedContent","jiraContent","processTranscript","mode","multipleIssues","success","Array","isArray","split_intents","forEach","intent","index","push","Date","now","title","content","epicKey","classified_intent","jiraError","confluenceContent","multiplePages","confluenceData","body","description","sections","acceptance_criteria","parentPageId","existingPageId","confluenceError","allIds","map","item","toggleItemExpansion","itemId","newExpanded","has","delete","add","startEditingItem","saveItemEdit","updatedContent","prev","addSplit","afterItemId","afterIndex","findIndex","newItem","newContent","splice","mergeWithPrevious","itemIndex","currentItem","previousItem","proceedToConfirmation","executeCreation","creationResults","contentCopy","assignee","createJiraIssueFromIntent","issue_key","url","issue_url","pageContent","updateConfluencePage","createConfluencePage","page_id","page_url","createSimilarUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","project","placeholder","sort","a","b","nameA","epic_name","epic_summary","nameB","localeCompare","epic","uniqueKey","space","checked","page_title","page","disabled","rows","_item$content$section","toUpperCase","priority","join","filter","href","rel","_c","$RefreshReg$"],"sources":["C:/poia_tools/roia-suite/frontend/src/components/EnterpriseWorkflow.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ApiService from '../services/api';\nimport './EnterpriseWorkflow.css';\n\nconst EnterpriseWorkflow = ({ onComplete, onCancel }) => {\n  // Step 1: Update Type Selection\n  const [updateType, setUpdateType] = useState(''); // 'jira', 'confluence', 'both'\n  const [selectedProject, setSelectedProject] = useState('');\n  const [selectedSpace, setSelectedSpace] = useState('');\n  const [selectedParentPage, setSelectedParentPage] = useState('');\n  \n  // Available options from backend\n  const [availableProjects, setAvailableProjects] = useState([]);\n  const [availableSpaces, setAvailableSpaces] = useState([]);\n  const [availablePages, setAvailablePages] = useState([]);\n  const [availableEpics, setAvailableEpics] = useState([]);\n  const [selectedEpic, setSelectedEpic] = useState('');\n  const [username, setUsername] = useState(''); // Username for Jira assignee\n  const [confluenceAuthor, setConfluenceAuthor] = useState(''); // Author for Confluence pages\n  /* eslint-disable no-unused-vars */\n  // Variables for Confluence page updating - used in JSX and processContent function\n  const [selectedExistingPage, setSelectedExistingPage] = useState(''); \n  const [updateExistingPage, setUpdateExistingPage] = useState(false);\n  /* eslint-enable no-unused-vars */\n  \n  // Step 2: Voice/Text Input\n  const [inputText, setInputText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [characterCount, setCharacterCount] = useState(0);\n  // Token estimation has been removed as requested\n  const [multipleUpdates, setMultipleUpdates] = useState(false);\n  \n  // Step 3: LLM Processing\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedContent, setGeneratedContent] = useState([]);\n  \n  // Step 4: Draft Review\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [editingItem, setEditingItem] = useState(null);\n  \n  // Step 5: Batch Confirmation & Results\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState('');\n  \n  // Epic creation modal\n  const [showNewEpicModal, setShowNewEpicModal] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [newEpicSummary, setNewEpicSummary] = useState('');\n  const [newEpicDescription, setNewEpicDescription] = useState('');\n  const [isCreatingEpic, setIsCreatingEpic] = useState(false);\n\n  // Update character count\n  useEffect(() => {\n    setCharacterCount(inputText.length);\n    // Token estimation removed as requested\n  }, [inputText]);\n\n  const loadInitialData = async () => {\n    console.log('🔍 loadInitialData called');\n    try {\n      // Load available projects and spaces\n      const [jiraHealth, confluenceHealth] = await Promise.all([\n        ApiService.checkJiraHealth().catch(err => {\n          console.error('Failed to check Jira health:', err);\n          return { status: 'unhealthy' };\n        }),\n        ApiService.checkConfluenceHealth().catch(err => {\n          console.error('Failed to check Confluence health:', err);\n          return { connected: false, error: err.message };\n        })\n      ]);\n\n      console.log('🔍 Health checks:', { jiraHealth, confluenceHealth });\n\n      // Always set some default projects and spaces to ensure UI is functional\n      // This is a fallback in case the health checks fail\n      const defaultProjects = [\n        { key: 'ROIA', name: 'ROIA' },\n        { key: 'PROPS', name: 'PROPS' }\n      ];\n      \n      const defaultSpaces = [\n        { key: 'ROIA', name: 'ROIA' },\n        { key: 'PROPS', name: 'PROPS' }\n      ];\n\n      // Set Jira projects\n      if (jiraHealth && jiraHealth.status === 'healthy') {\n        console.log('✅ Setting Jira projects');\n        setAvailableProjects(defaultProjects);\n      } else {\n        console.log('⚠️ Using default Jira projects due to health check failure');\n        setAvailableProjects(defaultProjects);\n      }\n\n      // Set Confluence spaces\n      if (confluenceHealth && confluenceHealth.connected === true) {\n        console.log('✅ Setting Confluence spaces');\n        setAvailableSpaces(defaultSpaces);\n      } else {\n        console.log('⚠️ Using default Confluence spaces due to health check failure:', confluenceHealth);\n        setAvailableSpaces(defaultSpaces);\n      }\n    } catch (err) {\n      console.error('❌ loadInitialData error:', err);\n      setError('Failed to load initial data');\n      \n      // Set defaults even if there's an error\n      setAvailableProjects([{ key: 'ROIA', name: 'ROIA' }]);\n      setAvailableSpaces([{ key: 'ROIA', name: 'ROIA' }]);\n    }\n  };\n\n  // Load initial data when component mounts (only once)\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n\n  const handleUpdateTypeChange = (type) => {\n    setUpdateType(type);\n    // Reset selections when type changes\n    setSelectedProject('');\n    setSelectedSpace('');\n    setSelectedParentPage('');\n  };\n\n  const createNewEpic = async () => {\n    if (!selectedProject || !newEpicName.trim() || !newEpicSummary.trim()) {\n      return;\n    }\n    \n    setIsCreatingEpic(true);\n    setError('');\n    \n    try {\n      console.log('🔍 Creating new epic for project:', selectedProject);\n      const result = await ApiService.createJiraEpic(\n        newEpicName,\n        newEpicSummary,\n        newEpicDescription,\n        selectedProject\n      );\n      \n      console.log('✅ Created new epic:', result);\n      \n      // Add the new epic to the list and select it\n      const newEpic = {\n        id: result.epic_id,\n        key: result.epic_key,\n        name: newEpicName,\n        summary: newEpicSummary\n      };\n      \n      setAvailableEpics([...availableEpics, newEpic]);\n      setSelectedEpic(result.epic_id);\n      \n      // Close the modal and reset the form\n      setShowNewEpicModal(false);\n      setNewEpicName('');\n      setNewEpicSummary('');\n      setNewEpicDescription('');\n      \n    } catch (err) {\n      console.error('❌ Failed to create epic:', err);\n      setError(`Failed to create epic: ${err.message}`);\n    } finally {\n      setIsCreatingEpic(false);\n    }\n  };\n\n  const handleProjectChange = async (projectKey) => {\n    setSelectedProject(projectKey);\n    setSelectedEpic('');\n    // Load epics for the selected project\n    if (projectKey) {\n      try {\n        console.log('🔍 Loading epics for project:', projectKey);\n        const epics = await ApiService.getJiraEpics(projectKey);\n        console.log('✅ Loaded epics:', epics);\n        setAvailableEpics(epics);\n      } catch (err) {\n        console.error('❌ Failed to load epics for project:', projectKey, err);\n        setAvailableEpics([]);\n      }\n    } else {\n      setAvailableEpics([]);\n    }\n  };\n\n  const handleSpaceChange = async (spaceKey) => {\n    console.log('🔍 handleSpaceChange called with space:', spaceKey);\n    setSelectedSpace(spaceKey);\n    // Reset selected parent page\n    setSelectedParentPage('');\n    \n    // Load pages for the selected space\n    if (spaceKey) {\n      try {\n        console.log('🔍 Fetching pages for space:', spaceKey);\n        // Use the increased limit of 500 pages\n        const pages = await ApiService.getConfluencePages(spaceKey, 500);\n        console.log('✅ Received pages:', pages);\n        setAvailablePages(pages);\n      } catch (err) {\n        console.error('❌ Failed to load pages for space:', spaceKey, err);\n        setAvailablePages([]);\n      }\n    } else {\n      setAvailablePages([]);\n    }\n  };\n  \n  // Speech recognition implementation\n  const startRecording = () => {\n    // If already recording, stop it\n    if (isRecording && window.currentRecognition) {\n      stopRecording();\n      return;\n    }\n    \n    if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n      alert('Speech recognition is not supported in your browser. Please use Chrome or Edge.');\n      return;\n    }\n    \n    setIsRecording(true);\n    \n    // Initialize speech recognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    \n    // Configure recognition\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    \n    // Handle results\n    recognition.onresult = (event) => {\n      let transcript = '';\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        if (event.results[i].isFinal) {\n          transcript += event.results[i][0].transcript + ' ';\n        }\n      }\n      \n      if (transcript) {\n        // Append to existing text instead of replacing\n        setInputText(prevText => prevText + ' ' + transcript.trim());\n      }\n    };\n    \n    // Handle end of recording\n    recognition.onend = () => {\n      setIsRecording(false);\n      // Clear the current recognition instance\n      window.currentRecognition = null;\n    };\n    \n    // Handle errors\n    recognition.onerror = (event) => {\n      console.error('Speech recognition error:', event.error);\n      setIsRecording(false);\n      window.currentRecognition = null;\n      if (event.error === 'not-allowed') {\n        alert('Microphone access denied. Please allow microphone access to use voice input.');\n      }\n    };\n    \n    // Start recording\n    recognition.start();\n    \n    // Store recognition instance for stopping later\n    window.currentRecognition = recognition;\n  };\n  \n  // Function to stop recording\n  const stopRecording = () => {\n    if (window.currentRecognition) {\n      window.currentRecognition.stop();\n      // onend handler will set isRecording to false\n    }\n  };\n\n  // This is intentionally empty to remove the duplicate function\n\n  const processContent = async () => {\n    if (!inputText.trim()) {\n      setError('Please enter some content to process');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError('');\n    let processedContent = [];\n\n    try {\n      // Process for Jira if selected\n      if (updateType === 'jira' || updateType === 'both') {\n        try {\n          // Process for Jira with enforced schema\n          const jiraContent = await ApiService.processTranscript({\n            transcript: inputText,\n            mode: 'jira',\n            multipleIssues: multipleUpdates,\n            projectKey: selectedProject\n          });\n          \n          if (jiraContent.success) {\n            // Handle multiple issues if available\n            if (multipleUpdates && Array.isArray(jiraContent.split_intents) && jiraContent.split_intents.length > 0) {\n              console.log('🔍 Processing multiple Jira issues:', jiraContent.split_intents.length);\n              \n              // Add each split intent as a separate item\n              jiraContent.split_intents.forEach((intent, index) => {\n                processedContent.push({\n                  type: 'jira',\n                  id: `jira-${Date.now()}-${index}`,\n                  title: intent.summary || `Issue ${index + 1}`,\n                  content: intent,\n                  projectKey: selectedProject,\n                  epicKey: selectedEpic || null\n                });\n              });\n            } \n            // Fall back to single issue if no splits or splitting not enabled\n            else if (jiraContent.classified_intent) {\n              processedContent.push({\n                type: 'jira',\n                id: `jira-${Date.now()}`,\n                title: jiraContent.classified_intent.summary,\n                content: jiraContent.classified_intent,\n                projectKey: selectedProject,\n                epicKey: selectedEpic || null\n              });\n            }\n          }\n        } catch (jiraError) {\n          console.error('Error processing Jira content:', jiraError);\n          // Continue processing Confluence if selected\n        }\n      }\n\n      // Process for Confluence if selected\n      if (updateType === 'confluence' || updateType === 'both') {\n        try {\n          // Process for Confluence with enforced schema\n          const confluenceContent = await ApiService.processTranscript({\n            transcript: inputText,\n            mode: 'confluence',\n            multiplePages: multipleUpdates,\n            spaceKey: selectedSpace\n          });\n          \n          console.log('🔍 Confluence content response:', confluenceContent);\n          \n          // Use the classified_intent for Confluence content as well\n          // The backend uses the same structure for both Jira and Confluence\n          if (confluenceContent.success && confluenceContent.classified_intent) {\n            // For now, we don't have multiple pages support in the backend yet\n            // So we'll create a single Confluence page\n            const confluenceData = {\n              title: confluenceContent.classified_intent.summary || 'Generated Page Title',\n              body: confluenceContent.classified_intent.description || inputText,\n              sections: confluenceContent.classified_intent.acceptance_criteria || ['Introduction', 'Details']\n            };\n            \n            processedContent.push({\n              type: 'confluence',\n              id: `confluence-${Date.now()}`,\n              title: confluenceData.title,\n              content: confluenceData,\n              spaceKey: selectedSpace,\n              parentPageId: updateExistingPage ? null : selectedParentPage,\n              updateExistingPage: updateExistingPage,\n              existingPageId: updateExistingPage ? selectedExistingPage : null\n            });\n            \n            console.log('✅ Created Confluence content item:', confluenceData.title);\n          } else {\n            // Fallback if processing fails\n            processedContent.push({\n              type: 'confluence',\n              id: `confluence-${Date.now()}`,\n              title: 'Generated Page Title',\n              content: {\n                title: 'Generated Page Title',\n                sections: ['Section 1', 'Section 2'],\n                body: inputText\n              },\n              spaceKey: selectedSpace,\n              parentPageId: updateExistingPage ? null : selectedParentPage,\n              updateExistingPage: updateExistingPage,\n              existingPageId: updateExistingPage ? selectedExistingPage : null\n            });\n          }\n        } catch (confluenceError) {\n          console.error('Error processing Confluence content:', confluenceError);\n          // Continue with what we have\n        }\n      }\n\n      // Update UI with processed content\n      setGeneratedContent(processedContent);\n      \n      // Auto-expand all items for review\n      const allIds = new Set(processedContent.map(item => item.id));\n      setExpandedItems(allIds);\n\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const toggleItemExpansion = (itemId) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(itemId)) {\n      newExpanded.delete(itemId);\n    } else {\n      newExpanded.add(itemId);\n    }\n    setExpandedItems(newExpanded);\n  };\n\n  const startEditingItem = (itemId) => {\n    setEditingItem(itemId);\n  };\n\n  const saveItemEdit = (itemId, updatedContent) => {\n    setGeneratedContent(prev => prev.map(item => \n      item.id === itemId ? { ...item, ...updatedContent } : item\n    ));\n    setEditingItem(null);\n  };\n\n  const addSplit = (afterItemId) => {\n    const afterIndex = generatedContent.findIndex(item => item.id === afterItemId);\n    const newItem = {\n      type: generatedContent[afterIndex].type,\n      id: `${generatedContent[afterIndex].type}-${Date.now()}`,\n      title: 'New Split Item',\n      content: generatedContent[afterIndex].content,\n      projectKey: generatedContent[afterIndex].projectKey,\n      spaceKey: generatedContent[afterIndex].spaceKey\n    };\n    \n    const newContent = [...generatedContent];\n    newContent.splice(afterIndex + 1, 0, newItem);\n    setGeneratedContent(newContent);\n  };\n\n  const mergeWithPrevious = (itemId) => {\n    const itemIndex = generatedContent.findIndex(item => item.id === itemId);\n    if (itemIndex > 0) {\n      const newContent = [...generatedContent];\n      const currentItem = newContent[itemIndex];\n      const previousItem = newContent[itemIndex - 1];\n      \n      // Merge content\n      previousItem.title += ` & ${currentItem.title}`;\n      // Merge logic would depend on content structure\n      \n      newContent.splice(itemIndex, 1);\n      setGeneratedContent(newContent);\n    }\n  };\n\n  const proceedToConfirmation = () => {\n    if (generatedContent.length === 0) {\n      setError('No content to create');\n      return;\n    }\n    setShowConfirmation(true);\n  };\n\n  const executeCreation = async () => {\n    setIsExecuting(true);\n    setError('');\n    \n    try {\n      const creationResults = [];\n      \n      for (const item of generatedContent) {\n        if (item.type === 'jira') {\n          console.log('🔍 Creating Jira issue with epic key:', item.epicKey);\n          \n          // Ensure we're only creating stories, not bugs, tasks, or epics\n          const contentCopy = { ...item.content };\n          contentCopy.type = 'story'; // Force type to be 'story'\n          \n          // Add assignee if username is provided\n          if (username && username.trim()) {\n            contentCopy.assignee = username.trim();\n            console.log('🔍 Setting assignee to:', username.trim());\n          }\n          \n          const result = await ApiService.createJiraIssueFromIntent(\n            { classified_intent: contentCopy },\n            item.projectKey,\n            item.epicKey\n          );\n          creationResults.push({\n            type: 'jira',\n            title: item.title,\n            key: result.issue_key,\n            url: result.issue_url,\n            success: true\n          });\n        } else if (item.type === 'confluence') {\n          try {\n            // Add author information if provided\n            let pageContent = item.content.body;\n            if (confluenceAuthor && confluenceAuthor.trim()) {\n              // Add author information to the content\n              pageContent = `<p><strong>Author:</strong> ${confluenceAuthor.trim()}</p>\\n${pageContent}`;\n              console.log('🔍 Setting Confluence page author to:', confluenceAuthor.trim());\n            }\n            \n            let result;\n            \n            // Check if we're updating an existing page or creating a new one\n            if (item.updateExistingPage && item.existingPageId) {\n              console.log('🔍 Updating existing Confluence page:', item.existingPageId);\n              result = await ApiService.updateConfluencePage(\n                item.existingPageId,\n                pageContent,\n                `Updated via AI Project Management Suite by ${confluenceAuthor || 'user'}`,\n                true // append = true\n              );\n            } else {\n              // Create a new Confluence page\n              console.log('🔍 Creating new Confluence page in space:', item.spaceKey);\n              result = await ApiService.createConfluencePage(\n                {\n                  title: item.title,\n                  content: pageContent\n                },\n                item.spaceKey,\n                item.parentPageId || null\n              );\n            }\n            \n            creationResults.push({\n              type: 'confluence',\n              title: item.title,\n              key: result.page_id,\n              url: result.page_url,\n              success: true\n            });\n          } catch (error) {\n            console.error('Error creating Confluence page:', error);\n            creationResults.push({\n              type: 'confluence',\n              title: item.title,\n              key: null,\n              url: null,\n              success: false,\n              error: error.message\n            });\n          }\n        }\n      }\n      \n      setResults(creationResults);\n      onComplete(creationResults);\n      \n    } catch (err) {\n      setError(`Creation failed: ${err.message}`);\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  const createSimilarUpdate = () => {\n    // Reset to input step but keep selections\n    setGeneratedContent([]);\n    setResults([]);\n    setShowConfirmation(false);\n    setInputText('');\n    setError('');\n  };\n\n  // Render main workflow\n  return (\n    <div className=\"enterprise-workflow\">\n      <div className=\"workflow-header\">\n        <h1>🚀 Create Project Updates</h1>\n        <p>Enterprise-grade workflow for Jira issues and Confluence pages</p>\n      </div>\n\n      {/* Step 1: Update Type Selection */}\n      {!updateType && (\n        <div className=\"step-panel\">\n          <h2>1. Select Update Type</h2>\n          <div className=\"update-type-selector\">\n            <label className=\"radio-option\">\n              <input \n                type=\"radio\" \n                name=\"updateType\" \n                value=\"jira\"\n                onChange={(e) => handleUpdateTypeChange(e.target.value)}\n              />\n              <span className=\"radio-label\">\n                <strong>Jira Issues</strong>\n                <small>Create structured issues for project tracking</small>\n              </span>\n            </label>\n            \n            <label className=\"radio-option\">\n              <input \n                type=\"radio\" \n                name=\"updateType\" \n                value=\"confluence\"\n                onChange={(e) => handleUpdateTypeChange(e.target.value)}\n              />\n              <span className=\"radio-label\">\n                <strong>Confluence Pages</strong>\n                <small>Create documentation and knowledge base content</small>\n              </span>\n            </label>\n            \n            <label className=\"radio-option\">\n              <input \n                type=\"radio\" \n                name=\"updateType\" \n                value=\"both\"\n                onChange={(e) => handleUpdateTypeChange(e.target.value)}\n              />\n              <span className=\"radio-label\">\n                <strong>Both</strong>\n                <small>Create issues and pages simultaneously</small>\n              </span>\n            </label>\n          </div>\n        </div>\n      )}\n\n      {/* Step 2: Conditional Controls */}\n      {updateType && !inputText && (\n        <div className=\"step-panel\">\n          <div className=\"step-header\">\n            <button \n              onClick={() => setUpdateType('')}\n              className=\"back-button\"\n            >\n              ← Back to Update Type\n            </button>\n            <h2>2. Select Destination</h2>\n          </div>\n          <div className=\"destination-controls\">\n            {(updateType === 'jira' || updateType === 'both') && (\n              <div className=\"control-group\">\n                <label>Jira Project</label>\n                <select \n                  value={selectedProject} \n                  onChange={(e) => handleProjectChange(e.target.value)}\n                  className=\"searchable-select\"\n                >\n                  <option value=\"\">Select project...</option>\n                  {availableProjects.map(project => (\n                    <option key={project.key} value={project.key}>\n                      {project.key} - {project.name}\n                    </option>\n                  ))}\n                </select>\n                \n                {selectedProject && (\n                  <div>\n                    <div className=\"sub-control\">\n                      <label>Username (will be assigned to you)</label>\n                      <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Enter your Jira username\"\n                        className=\"text-input\"\n                      />\n                      <small className=\"input-help\">This will be set as the assignee for the created issues</small>\n                    </div>\n                    \n                    <div className=\"sub-control\">\n                      <label>Epic (optional)</label>\n                      <select \n                        value={selectedEpic} \n                        onChange={(e) => {\n                          const value = e.target.value;\n                          if (value === 'create_new') {\n                            // Show the create epic modal\n                            setShowNewEpicModal(true);\n                          } else {\n                            setSelectedEpic(value);\n                          }\n                        }}\n                        className=\"searchable-select\"\n                      >\n                        <option value=\"\">No epic (create at root level)</option>\n                      <option value=\"create_new\">➕ Create new epic...</option>\n                      {availableEpics.length > 0 && (\n                        [...availableEpics]\n                          .sort((a, b) => {\n                            // Safely handle missing properties by using fallbacks\n                            const nameA = a.epic_name || a.name || a.epic_summary || a.summary || '';\n                            const nameB = b.epic_name || b.name || b.epic_summary || b.summary || '';\n                            return nameA.localeCompare(nameB);\n                          })\n                          .map((epic, index) => {\n                            // Extract properties from API response format\n                            const id = epic.epic_key || epic.id || `epic-${index}`;\n                            const key = epic.epic_key || epic.key || 'Unknown';\n                            const name = epic.epic_name || epic.name || epic.epic_summary || 'Untitled Epic';\n                            // Remove unused summary variable to fix ESLint warning\n                            \n                            // Ensure unique key by combining id with index\n                            const uniqueKey = `${id}-${index}`;\n                            \n                            return (\n                              <option key={uniqueKey} value={id}>\n                                {key} | {name}\n                              </option>\n                            );\n                          })\n                      )}\n                    </select>\n                  </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {(updateType === 'confluence' || updateType === 'both') && (\n              <div className=\"control-group\">\n                <label>Confluence Space</label>\n                <select \n                  value={selectedSpace} \n                  onChange={(e) => handleSpaceChange(e.target.value)}\n                  className=\"searchable-select\"\n                >\n                  <option value=\"\">Select space...</option>\n                  {availableSpaces.map(space => (\n                    <option key={space.key} value={space.key}>\n                      {space.key} - {space.name}\n                    </option>\n                  ))}\n                </select>\n                \n                {selectedSpace && (\n                  <div>\n                    <div className=\"sub-control\">\n                      <label>Author (will be credited in the page)</label>\n                      <input\n                        type=\"text\"\n                        value={confluenceAuthor}\n                        onChange={(e) => setConfluenceAuthor(e.target.value)}\n                        placeholder=\"Enter your name\"\n                        className=\"text-input\"\n                      />\n                      <small className=\"input-help\">This will be shown as the page author</small>\n                    </div>\n                    \n                    {availablePages.length > 0 && (\n                      <>\n                        <div className=\"sub-control\">\n                          <label className=\"toggle-option\">\n                            <input\n                              type=\"checkbox\"\n                              checked={updateExistingPage}\n                              onChange={(e) => {\n                                setUpdateExistingPage(e.target.checked);\n                                if (!e.target.checked) {\n                                  setSelectedExistingPage('');\n                                }\n                              }}\n                            />\n                            <span>Update existing page</span>\n                            <small>Add content to an existing page instead of creating a new one</small>\n                          </label>\n                        </div>\n                        \n                        {updateExistingPage ? (\n                          <div className=\"sub-control\">\n                            <label>Select Page to Update</label>\n                            <select \n                              value={selectedExistingPage} \n                              onChange={(e) => setSelectedExistingPage(e.target.value)}\n                              className=\"searchable-select\"\n                            >\n                              <option value=\"\">Select a page to update...</option>\n                              {[...availablePages]\n                                .sort((a, b) => a.page_title.localeCompare(b.page_title))\n                                .map(page => (\n                                  <option key={page.page_id} value={page.page_id}>\n                                    {page.page_title}\n                                  </option>\n                                ))}\n                            </select>\n                          </div>\n                        ) : (\n                          <div className=\"sub-control\">\n                            <label>Parent Page (optional)</label>\n                            <select \n                              value={selectedParentPage} \n                              onChange={(e) => setSelectedParentPage(e.target.value)}\n                              className=\"searchable-select\"\n                            >\n                              <option value=\"\">No parent (root level)</option>\n                              {[...availablePages]\n                                .sort((a, b) => a.page_title.localeCompare(b.page_title))\n                                .map(page => (\n                                  <option key={page.page_id} value={page.page_id}>\n                                    {page.page_title}\n                                  </option>\n                                ))}\n                            </select>\n                          </div>\n                        )}\n                      </>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"helper-text\">\n            <p>\n              <strong>Issues vs Pages:</strong> Issues track actionable work items with status, \n              priority, and assignments. Pages capture knowledge, documentation, and collaborative content.\n            </p>\n          </div>\n          \n          <button \n            onClick={() => setInputText(' ')} // Trigger input step\n            disabled={\n              (updateType === 'jira' && !selectedProject) ||\n              (updateType === 'confluence' && !selectedSpace) ||\n              (updateType === 'both' && (!selectedProject || !selectedSpace))\n            }\n            className=\"btn-continue\"\n          >\n            Continue to Input →\n          </button>\n        </div>\n      )}\n\n      {/* Step 3: Voice/Text Input */}\n      {updateType && inputText && !showConfirmation && results.length === 0 && (\n        <div className=\"step-panel\">\n          <div className=\"step-header\">\n            <button \n              onClick={() => {\n                setInputText('');\n                setGeneratedContent([]);\n                setError('');\n              }}\n              className=\"back-button\"\n            >\n              ← Back to Destination\n            </button>\n            <h2>3. Input Content</h2>\n          </div>\n          <div className=\"input-panel\">\n            <div className=\"input-controls\">\n              <div className=\"voice-text-toggle\">\n                <button \n                  onClick={startRecording}\n                  className={`btn-voice ${isRecording ? 'recording' : ''}`}\n                >\n                  {isRecording ? '⏹️ Stop Recording' : '🎤 Voice Input'}\n                </button>\n              </div>\n              \n              <textarea\n                value={inputText}\n                onChange={(e) => setInputText(e.target.value)}\n                placeholder=\"Describe what you want to create...\"\n                className=\"content-textarea\"\n                rows={8}\n              />\n              \n              <div className=\"input-stats\">\n                <span className=\"char-count\">\n                  {characterCount} characters\n                </span>\n              </div>\n              \n              <div className=\"advanced-options\">\n                <label className=\"toggle-option\">\n                  <input\n                    type=\"checkbox\"\n                    checked={multipleUpdates}\n                    onChange={(e) => setMultipleUpdates(e.target.checked)}\n                  />\n                  <span>Split into multiple {updateType === 'jira' ? 'issues' : updateType === 'confluence' ? 'pages' : 'items'}</span>\n                  <small>AI will look for logical breakpoints to create separate items</small>\n                </label>\n              </div>\n            </div>\n            \n            <button\n              onClick={processContent}\n              disabled={!inputText.trim() || isProcessing}\n              className=\"btn-process\"\n            >\n              {isProcessing ? '⏳ Processing...' : '🧠 Generate Content'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 4: Draft Review */}\n      {generatedContent.length > 0 && !showConfirmation && results.length === 0 && (\n        <div className=\"step-panel\">\n          <div className=\"step-header\">\n            <button \n              onClick={() => {\n                setGeneratedContent([]);\n                setError('');\n              }}\n              className=\"back-button\"\n            >\n              ← Back to Input\n            </button>\n            <h2>4. Review & Edit Drafts</h2>\n          </div>\n          <div className=\"draft-accordion\">\n            {generatedContent.map((item, index) => (\n              <div key={item.id} className=\"accordion-item\">\n                <div \n                  className=\"accordion-header\"\n                  onClick={() => toggleItemExpansion(item.id)}\n                >\n                  <span className=\"item-type-badge\">\n                    {item.type === 'jira' ? '🎫' : '📄'} {item.type.toUpperCase()}\n                  </span>\n                  <span className=\"item-title\">{item.title}</span>\n                  <span className=\"expand-icon\">\n                    {expandedItems.has(item.id) ? '▼' : '▶'}\n                  </span>\n                </div>\n                \n                {expandedItems.has(item.id) && (\n                  <div className=\"accordion-content\">\n                    {editingItem === item.id ? (\n                      <div className=\"edit-form\">\n                        <input\n                          value={item.title}\n                          onChange={(e) => saveItemEdit(item.id, { title: e.target.value })}\n                          className=\"edit-title\"\n                        />\n                        {item.type === 'jira' && (\n                          <>\n                            <textarea\n                              value={item.content.description || ''}\n                              onChange={(e) => saveItemEdit(item.id, { \n                                content: { ...item.content, description: e.target.value }\n                              })}\n                              className=\"edit-description\"\n                              rows={4}\n                            />\n                            <select\n                              value={item.content.priority || 'Medium'}\n                              onChange={(e) => saveItemEdit(item.id, {\n                                content: { ...item.content, priority: e.target.value }\n                              })}\n                              className=\"edit-priority\"\n                            >\n                              <option value=\"Low\">Low Priority</option>\n                              <option value=\"Medium\">Medium Priority</option>\n                              <option value=\"High\">High Priority</option>\n                              <option value=\"Critical\">Critical Priority</option>\n                            </select>\n                          </>\n                        )}\n                        <div className=\"edit-actions\">\n                          <button onClick={() => setEditingItem(null)} className=\"btn-save\">\n                            ✓ Save\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"content-preview\">\n                        <div className=\"content-details\">\n                          {item.type === 'jira' ? (\n                            <>\n                              <p><strong>Summary:</strong> {item.content.summary}</p>\n                              <p><strong>Description:</strong> {item.content.description}</p>\n                              <p><strong>Priority:</strong> {item.content.priority}</p>\n                              <p><strong>Type:</strong> {item.content.type}</p>\n                            </>\n                          ) : (\n                            <>\n                              <p><strong>Title:</strong> {item.content.title}</p>\n                              <p><strong>Sections:</strong> {item.content.sections?.join(', ')}</p>\n                              <div><strong>Body:</strong> <div className=\"body-preview\">{item.content.body}</div></div>\n                            </>\n                          )}\n                        </div>\n                        \n                        <div className=\"content-actions\">\n                          <button \n                            onClick={() => startEditingItem(item.id)}\n                            className=\"btn-edit\"\n                          >\n                            ✏️ Edit\n                          </button>\n                          <button \n                            onClick={() => addSplit(item.id)}\n                            className=\"btn-split\"\n                          >\n                            ➕ Add Split\n                          </button>\n                          {index > 0 && (\n                            <button \n                              onClick={() => mergeWithPrevious(item.id)}\n                              className=\"btn-merge\"\n                            >\n                              🔗 Merge with Previous\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"review-actions\">\n            <button onClick={() => setGeneratedContent([])} className=\"btn-back\">\n              ← Back to Input\n            </button>\n            <button onClick={proceedToConfirmation} className=\"btn-continue\">\n              Continue to Confirmation →\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Epic Creation Modal */}\n      {showNewEpicModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>Create New Epic</h3>\n            <div className=\"modal-form\">\n              <div className=\"form-group\">\n                <label>Epic Name</label>\n                <input \n                  type=\"text\" \n                  value={newEpicName}\n                  onChange={(e) => setNewEpicName(e.target.value)}\n                  placeholder=\"Enter epic name\"\n                  className=\"modal-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Summary</label>\n                <input \n                  type=\"text\" \n                  value={newEpicSummary}\n                  onChange={(e) => setNewEpicSummary(e.target.value)}\n                  placeholder=\"Enter epic summary\"\n                  className=\"modal-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Description (optional)</label>\n                <textarea \n                  value={newEpicDescription}\n                  onChange={(e) => setNewEpicDescription(e.target.value)}\n                  placeholder=\"Enter epic description\"\n                  className=\"modal-textarea\"\n                  rows={4}\n                />\n              </div>\n              <div className=\"modal-actions\">\n                <button \n                  onClick={() => {\n                    setShowNewEpicModal(false);\n                    setNewEpicName('');\n                    setNewEpicSummary('');\n                    setNewEpicDescription('');\n                  }}\n                  className=\"btn-cancel\"\n                >\n                  Cancel\n                </button>\n                <button \n                  onClick={createNewEpic}\n                  disabled={!newEpicName.trim() || !newEpicSummary.trim() || isCreatingEpic}\n                  className=\"btn-create\"\n                >\n                  {isCreatingEpic ? '⏳ Creating...' : 'Create Epic'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Step 5: Batch Confirmation */}\n      {showConfirmation && results.length === 0 && (\n        <div className=\"step-panel\">\n          <div className=\"step-header\">\n            <button \n              onClick={() => setShowConfirmation(false)}\n              className=\"back-button\"\n            >\n              ← Back to Review\n            </button>\n            <h2>5. Confirm Creation</h2>\n          </div>\n          <div className=\"confirmation-summary\">\n            <div className=\"summary-stats\">\n              <h3>📊 Creation Summary</h3>\n              <div className=\"stats-grid\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-number\">\n                    {generatedContent.filter(item => item.type === 'jira').length}\n                  </span>\n                  <span className=\"stat-label\">Jira Issues</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-number\">\n                    {generatedContent.filter(item => item.type === 'confluence').length}\n                  </span>\n                  <span className=\"stat-label\">Confluence Pages</span>\n                </div>\n\n              </div>\n            </div>\n            \n            <div className=\"warnings\">\n              {generatedContent.length > 5 && (\n                <div className=\"warning-item\">\n                  ⚠️ Creating {generatedContent.length} items simultaneously. This may take several minutes.\n                </div>\n              )}\n\n            </div>\n            \n            <div className=\"final-review\">\n              <h4>Items to be created:</h4>\n              <ul className=\"creation-list\">\n                {generatedContent.map(item => (\n                  <li key={item.id} className=\"creation-item\">\n                    <span className=\"item-badge\">\n                      {item.type === 'jira' ? '🎫' : '📄'}\n                    </span>\n                    <span className=\"item-details\">\n                      <strong>{item.title}</strong>\n                      <small>\n                        {item.type === 'jira' ? `Project: ${item.projectKey}` : `Space: ${item.spaceKey}`}\n                      </small>\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          \n          <div className=\"confirmation-actions\">\n            <button onClick={() => setShowConfirmation(false)} className=\"btn-back\">\n              ← Back to Review\n            </button>\n            <button \n              onClick={executeCreation}\n              disabled={isExecuting}\n              className=\"btn-execute\"\n            >\n              {isExecuting ? '⏳ Creating...' : '🚀 Create All Items'}\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Step 6: Results */}\n      {results.length > 0 && (\n        <div className=\"step-panel\">\n          <div className=\"step-header\">\n            <h2>6. Creation Results</h2>\n          </div>\n          <div className=\"results-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Title</th>\n                  <th>Key/ID</th>\n                  <th>Link</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {results.map((result, index) => (\n                  <tr key={index} className={result.success ? 'success' : 'error'}>\n                    <td>\n                      <span className=\"type-badge\">\n                        {result.type === 'jira' ? '🎫 Jira' : '📄 Confluence'}\n                      </span>\n                    </td>\n                    <td>{result.title}</td>\n                    <td className=\"result-key\">{result.key}</td>\n                    <td>\n                      <a href={result.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"result-link\">\n                        View →\n                      </a>\n                    </td>\n                    <td>\n                      <span className={`status-badge ${result.success ? 'success' : 'error'}`}>\n                        {result.success ? '✓ Created' : '✗ Failed'}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          <div className=\"workflow-completion\">\n            <div className=\"completion-actions\">\n              <button onClick={createSimilarUpdate} className=\"btn-similar\">\n                🔄 Create Similar Update\n              </button>\n              <button onClick={onCancel} className=\"btn-done\">\n                ✓ Done\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n};\n\nexport default EnterpriseWorkflow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}